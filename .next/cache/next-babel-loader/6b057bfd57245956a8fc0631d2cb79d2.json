{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './Product.css';\nimport { buyAction, deleteAction, plusCountAction, minusCountAction } from '../../redux/action';\n\nfunction Product(props) {\n  const {\n    title,\n    description,\n    price,\n    count,\n    id,\n    cartProd,\n    buy,\n    deleteProduct,\n    plusCount,\n    minusCount\n  } = props;\n\n  if (cartProd) {\n    return __jsx(\"section\", {\n      className: \"cartProduct\"\n    }, __jsx(\"div\", {\n      className: \"cartProduct_wrapper\"\n    }, __jsx(\"button\", {\n      onClick: () => deleteProduct(id),\n      className: \"cartProduct_buttonDelete\"\n    }, \"\\xD7\"), __jsx(\"div\", {\n      className: \"cartProduct_description\"\n    }, __jsx(\"h1\", null, title), __jsx(\"p\", null, description)), __jsx(\"div\", {\n      className: \"cartProduct_count\"\n    }, __jsx(\"button\", {\n      onClick: () => plusCount(id),\n      className: \" cartProduct_button cartProduct_button__plus\"\n    }, \"+\"), __jsx(\"span\", {\n      className: \"cartProduct_displayCount\"\n    }, count), __jsx(\"button\", {\n      onClick: () => minusCount(id, '-'),\n      disabled: count === 1,\n      className: \"cartProduct_button cartProduct_button__minus\"\n    }, \"-\")), __jsx(\"span\", {\n      className: \"cartProduct_price\"\n    }, `${price * count}$`)));\n  }\n\n  return __jsx(\"section\", {\n    className: \"product\"\n  }, __jsx(\"h1\", {\n    className: \"product_title\"\n  }, title), __jsx(\"p\", {\n    className: \"product_description\"\n  }, description), __jsx(\"div\", {\n    className: \"product_price\"\n  }, __jsx(\"p\", null, \"Price:\"), __jsx(\"span\", null, `${price}$`)), __jsx(\"button\", {\n    onClick: () => buy(id),\n    className: \"product_buttonBuy\"\n  }, \"buy\"));\n}\n\n;\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    buy: (id, count) => dispatch(buyAction(id)),\n    deleteProduct: id => dispatch(deleteAction(id)),\n    plusCount: id => dispatch(plusCountAction(id)),\n    minusCount: id => dispatch(minusCountAction(id))\n  };\n}\n\n;\n\nfunction mapStateToProps(state, ownProps) {\n  const {\n    product\n  } = ownProps;\n  return {\n    title: product.title,\n    description: product.description,\n    price: product.price,\n    id: product.id,\n    count: product.count\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","map":null,"metadata":{},"sourceType":"module"}